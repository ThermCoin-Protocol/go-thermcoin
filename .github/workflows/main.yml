name: Build and Release

on:
  push:
    branches:
      - thermcoin-beta

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            asset_name: thermcoin-ubuntu
          - os: windows-latest
            asset_name: thermcoin-windows.exe
          - os: macos-latest
            asset_name: thermcoin-macos
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build
        run: make all

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries-${{ matrix.os }}
          path: ./build/bin/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts Ubuntu
        uses: actions/download-artifact@v2
        with:
          name: binaries-ubuntu-latest
          path: ubuntu

      - name: Download artifacts Windows
        uses: actions/download-artifact@v2
        with:
          name: binaries-windows-latest
          path: windows

      - name: Download artifacts MacOS
        uses: actions/download-artifact@v2
        with:
          name: binaries-macos-latest
          path: macos

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: tag-${{ github.sha }}
          release_name: Release ${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Upload Release Asset Ubuntu
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ubuntu/therm
          asset_name: therm-ubuntu
          asset_content_type: application/octet-stream

      - name: Upload Release Asset MacOS
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/therm
          asset_name: therm-macos
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/therm
          asset_name: therm-windows.exe
          asset_content_type: application/octet-stream
